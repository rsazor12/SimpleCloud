<Project Sdk="Microsoft.NET.Sdk.Web">

  <PropertyGroup>
    <TargetFramework>netcoreapp3.1</TargetFramework>
    <RootNamespace>MachineLearning_SimpleCloud_MicroservicesHttp</RootNamespace>
    <AssemblyName>MachineLearning_SimpleCloud_MicroservicesHttp</AssemblyName>
    <TypeScriptCompileBlocked>true</TypeScriptCompileBlocked>
    <TypeScriptToolsVersion>Latest</TypeScriptToolsVersion>
    <IsPackable>true</IsPackable>
    <!--<IncludeOpenAPIAnalyzers>true</IncludeOpenAPIAnalyzers>-->
    <SpaRoot>ClientApp\</SpaRoot>
    <DefaultItemExcludes>$(DefaultItemExcludes);$(SpaRoot)node_modules\**</DefaultItemExcludes>

    <!-- Set this to true if you enable server-side prerendering -->
    <BuildServerSideRenderer>false</BuildServerSideRenderer>
    <UserSecretsId>5a6ec14d-67dc-485f-8c88-6c2473e2550b</UserSecretsId>
    <DockerDefaultTargetOS>Linux</DockerDefaultTargetOS>
    <DockerfileContext>..\..\..\..\..</DockerfileContext>
    <DockerComposeProjectPath>..\..\..\docker-compose.dcproj</DockerComposeProjectPath>
  </PropertyGroup>

  <ItemGroup>
    <PackageReference Include="Microsoft.AspNetCore.Mvc.NewtonsoftJson" Version="3.1.0" />
    <PackageReference Include="Microsoft.AspNetCore.SpaServices.Extensions" Version="3.1.0" />
    <PackageReference Include="Microsoft.Extensions.Diagnostics.HealthChecks.EntityFrameworkCore" Version="3.1.0" />
    <PackageReference Include="Microsoft.VisualStudio.Azure.Containers.Tools.Targets" Version="1.10.9" />
    <PackageReference Include="Microsoft.VisualStudio.Web.CodeGeneration.Design" Version="3.1.3" />
    <PackageReference Include="Microsoft.EntityFrameworkCore.Tools" Version="3.1.0">
      <PrivateAssets>all</PrivateAssets>
      <IncludeAssets>runtime; build; native; contentfiles; analyzers; buildtransitive</IncludeAssets>
    </PackageReference>
    <PackageReference Include="NSwag.AspNetCore" Version="13.5.0" />
    <PackageReference Include="NSwag.MSBuild" Version="13.5.0">
      <PrivateAssets>all</PrivateAssets>
      <IncludeAssets>runtime; build; native; contentfiles; analyzers; buildtransitive</IncludeAssets>
    </PackageReference>
  </ItemGroup>

  <ItemGroup>
    <!-- Don't publish the SPA source files, but do show them in the project files list -->
    <Compile Remove="api\**" />
    <Compile Remove="ClientApp\**" />
    <Content Remove="$(SpaRoot)**" />
    <Content Remove="api\**" />
    <Content Remove="ClientApp\**" />
    <EmbeddedResource Remove="api\**" />
    <EmbeddedResource Remove="ClientApp\**" />
    <None Remove="$(SpaRoot)**" />
    <None Remove="api\**" />
    <None Remove="ClientApp\**" />
    <None Include="$(SpaRoot)**" Exclude="$(SpaRoot)node_modules\**" />
  </ItemGroup>

  <ItemGroup>
    <Content Remove="nswag_old_2.json" />
  </ItemGroup>

  <ItemGroup>
    <None Remove="ClientApp\.editorconfig" />
    <None Remove="ClientApp\.gitignore" />
    <None Remove="ClientApp\angular.json" />
    <None Remove="ClientApp\browserslist" />
    <None Remove="ClientApp\e2e\protractor.conf.js" />
    <None Remove="ClientApp\e2e\src\app.e2e-spec.ts" />
    <None Remove="ClientApp\e2e\src\app.po.ts" />
    <None Remove="ClientApp\e2e\tsconfig.e2e.json" />
    <None Remove="ClientApp\package-lock.json" />
    <None Remove="ClientApp\package.json" />
    <None Remove="ClientApp\src\api-authorization\api-authorization.constants.ts" />
    <None Remove="ClientApp\src\api-authorization\api-authorization.module.spec.ts" />
    <None Remove="ClientApp\src\api-authorization\api-authorization.module.ts" />
    <None Remove="ClientApp\src\api-authorization\authorize.guard.spec.ts" />
    <None Remove="ClientApp\src\api-authorization\authorize.guard.ts" />
    <None Remove="ClientApp\src\api-authorization\authorize.interceptor.spec.ts" />
    <None Remove="ClientApp\src\api-authorization\authorize.interceptor.ts" />
    <None Remove="ClientApp\src\api-authorization\authorize.service.spec.ts" />
    <None Remove="ClientApp\src\api-authorization\authorize.service.ts" />
    <None Remove="ClientApp\src\api-authorization\login-menu\login-menu.component.css" />
    <None Remove="ClientApp\src\api-authorization\login-menu\login-menu.component.html" />
    <None Remove="ClientApp\src\api-authorization\login-menu\login-menu.component.spec.ts" />
    <None Remove="ClientApp\src\api-authorization\login-menu\login-menu.component.ts" />
    <None Remove="ClientApp\src\api-authorization\login\login.component.css" />
    <None Remove="ClientApp\src\api-authorization\login\login.component.html" />
    <None Remove="ClientApp\src\api-authorization\login\login.component.spec.ts" />
    <None Remove="ClientApp\src\api-authorization\login\login.component.ts" />
    <None Remove="ClientApp\src\api-authorization\logout\logout.component.css" />
    <None Remove="ClientApp\src\api-authorization\logout\logout.component.html" />
    <None Remove="ClientApp\src\api-authorization\logout\logout.component.spec.ts" />
    <None Remove="ClientApp\src\api-authorization\logout\logout.component.ts" />
    <None Remove="ClientApp\src\app\app.component.html" />
    <None Remove="ClientApp\src\app\app.component.ts" />
    <None Remove="ClientApp\src\app\app.module.ts" />
    <None Remove="ClientApp\src\app\app.server.module.ts" />
    <None Remove="ClientApp\src\app\ca_sln-api.ts" />
    <None Remove="ClientApp\src\app\cleanarchitecture-api.ts" />
    <None Remove="ClientApp\src\app\counter\counter.component.html" />
    <None Remove="ClientApp\src\app\counter\counter.component.spec.ts" />
    <None Remove="ClientApp\src\app\counter\counter.component.ts" />
    <None Remove="ClientApp\src\app\fetch-data\fetch-data.component.html" />
    <None Remove="ClientApp\src\app\fetch-data\fetch-data.component.ts" />
    <None Remove="ClientApp\src\app\home\home.component.html" />
    <None Remove="ClientApp\src\app\home\home.component.ts" />
    <None Remove="ClientApp\src\app\nav-menu\nav-menu.component.css" />
    <None Remove="ClientApp\src\app\nav-menu\nav-menu.component.html" />
    <None Remove="ClientApp\src\app\nav-menu\nav-menu.component.ts" />
    <None Remove="ClientApp\src\app\SimpleCloud_Monolithic-api.ts" />
    <None Remove="ClientApp\src\app\todo\todo.component.css" />
    <None Remove="ClientApp\src\app\todo\todo.component.html" />
    <None Remove="ClientApp\src\app\todo\todo.component.ts" />
    <None Remove="ClientApp\src\assets\.gitkeep" />
    <None Remove="ClientApp\src\environments\environment.prod.ts" />
    <None Remove="ClientApp\src\environments\environment.ts" />
    <None Remove="ClientApp\src\index.html" />
    <None Remove="ClientApp\src\karma.conf.js" />
    <None Remove="ClientApp\src\main.ts" />
    <None Remove="ClientApp\src\polyfills.ts" />
    <None Remove="ClientApp\src\styles.css" />
    <None Remove="ClientApp\src\test.ts" />
    <None Remove="ClientApp\src\tsconfig.app.json" />
    <None Remove="ClientApp\src\tsconfig.server.json" />
    <None Remove="ClientApp\src\tsconfig.spec.json" />
    <None Remove="ClientApp\src\tslint.json" />
    <None Remove="ClientApp\tsconfig.json" />
    <None Remove="ClientApp\tslint.json" />
  </ItemGroup>

  <ItemGroup>
    <None Include="nswag_old_2.json" />
  </ItemGroup>

  <ItemGroup>
    <ProjectReference Include="..\Application\Application.csproj" />
    <ProjectReference Include="..\Infrastructure\Infrastructure.csproj" />
  </ItemGroup>

  <ItemGroup>
    <Folder Include="Pages\Shared\" />
    <Folder Include="wwwroot\api2\" />
  </ItemGroup>

  <!--<Target Name="NSwag" AfterTargets="Build" Condition="'$(Configuration)' == 'Debug'">
    <Copy SourceFiles="@(Reference)" DestinationFolder="$(OutDir)References" />
    <Exec Command="$(NSwagExe_Core31) run /variables:Configuration=$(Configuration)" />
    <RemoveDir Directories="$(OutDir)References" />
  </Target>-->

  <!--<Target Name="DebugEnsureNodeEnv" BeforeTargets="Build" Condition=" '$(Configuration)' == 'Debug' And !Exists('$(SpaRoot)node_modules') ">
    --><!-- Ensure Node.js is installed --><!--
    <Exec Command="node version" ContinueOnError="true">
      <Output TaskParameter="ExitCode" PropertyName="ErrorCode" />
    </Exec>
    <Error Condition="'$(ErrorCode)' != '0'" Text="Node.js is required to build and run this project. To continue, please install Node.js from https://nodejs.org/, and then restart your command prompt or IDE." />
    <Message Importance="high" Text="Restoring dependencies using 'npm'. This may take several minutes..." />
    <Exec WorkingDirectory="$(SpaRoot)" Command="npm install" />
  </Target>-->

  <!--<Target Name="PublishRunWebpack" AfterTargets="ComputeFilesToPublish">
    --><!-- As part of publishing, ensure the JS resources are freshly built in production mode --><!--
    <Exec WorkingDirectory="$(SpaRoot)" Command="npm install" />
    <Exec WorkingDirectory="$(SpaRoot)" Command="npm run build prod" />
    <Exec WorkingDirectory="$(SpaRoot)" Command="npm run build:ssr prod" Condition=" '$(BuildServerSideRenderer)' == 'true' " />

    --><!-- Include the newly-built files in the publish output --><!--
    <ItemGroup>
      <DistFiles Include="$(SpaRoot)dist\**; $(SpaRoot)dist-server\**" />
      <DistFiles Include="$(SpaRoot)node_modules\**" Condition="'$(BuildServerSideRenderer)' == 'true'" />
      <ResolvedFileToPublish Include="@(DistFiles->'%(FullPath)')" Exclude="@(ResolvedFileToPublish)">
        <RelativePath>%(DistFiles.Identity)</RelativePath>
        <CopyToPublishDirectory>PreserveNewest</CopyToPublishDirectory>
        <ExcludeFromSingleFile>true</ExcludeFromSingleFile>
      </ResolvedFileToPublish>
    </ItemGroup>
  </Target>-->

  <ProjectExtensions><VisualStudio><UserProperties appsettings_1json__JsonSchema="http://json.schemastore.org/2.0.0-csd.2.beta.2018-10-10.json" /></VisualStudio></ProjectExtensions>

</Project>
