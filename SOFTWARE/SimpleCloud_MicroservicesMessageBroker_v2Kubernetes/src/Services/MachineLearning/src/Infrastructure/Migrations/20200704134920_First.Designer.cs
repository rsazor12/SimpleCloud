// <auto-generated />
using System;
using MachineLearning_SimpleCloud_MicroservicesHttp.Infrastructure.Persistence;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;

namespace MachineLearning_SimpleCloud_MicroservicesHttp.Infrastructure.Migrations
{
    [DbContext(typeof(MachineLearningDbContext))]
    [Migration("20200704134920_First")]
    partial class First
    {
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "3.1.0")
                .HasAnnotation("Relational:MaxIdentifierLength", 128)
                .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

            modelBuilder.Entity("MachineLearning_SimpleCloud_MicroservicesHttp.Domain.Entities.Client", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("Email")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Name")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Surname")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.ToTable("Clients");
                });

            modelBuilder.Entity("MachineLearning_SimpleCloud_MicroservicesHttp.Domain.Entities.File", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("Name")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Path")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.ToTable("Files");
                });

            modelBuilder.Entity("MachineLearning_SimpleCloud_MicroservicesHttp.Domain.Entities.MLService", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<Guid>("ClientId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<Guid>("ServiceDetailsId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("ServiceName")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.HasIndex("ClientId")
                        .IsUnique();

                    b.HasIndex("ServiceDetailsId")
                        .IsUnique();

                    b.ToTable("MLServices");
                });

            modelBuilder.Entity("MachineLearning_SimpleCloud_MicroservicesHttp.Domain.Entities.ServiceDetails", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<int>("BatchSize")
                        .HasColumnType("int");

                    b.Property<int>("Epochs")
                        .HasColumnType("int");

                    b.Property<double>("LearningRate")
                        .HasColumnType("float");

                    b.Property<string>("ModelPath")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("TestDataPath")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("TrainDataPath")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.ToTable("ServiceDetails");
                });

            modelBuilder.Entity("MachineLearning_SimpleCloud_MicroservicesHttp.Domain.Entities.ServiceTask", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<DateTime>("EndTime")
                        .HasColumnType("datetime2");

                    b.Property<string>("Name")
                        .HasColumnType("nvarchar(max)");

                    b.Property<Guid>("ServiceDetailsId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<DateTime>("StartTime")
                        .HasColumnType("datetime2");

                    b.HasKey("Id");

                    b.HasIndex("ServiceDetailsId");

                    b.ToTable("ServiceTasks");
                });

            modelBuilder.Entity("MachineLearning_SimpleCloud_MicroservicesHttp.Domain.Entities.MLService", b =>
                {
                    b.HasOne("MachineLearning_SimpleCloud_MicroservicesHttp.Domain.Entities.Client", "Client")
                        .WithOne("MLService")
                        .HasForeignKey("MachineLearning_SimpleCloud_MicroservicesHttp.Domain.Entities.MLService", "ClientId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("MachineLearning_SimpleCloud_MicroservicesHttp.Domain.Entities.ServiceDetails", "ServiceDetails")
                        .WithOne("MLService")
                        .HasForeignKey("MachineLearning_SimpleCloud_MicroservicesHttp.Domain.Entities.MLService", "ServiceDetailsId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("MachineLearning_SimpleCloud_MicroservicesHttp.Domain.Entities.ServiceTask", b =>
                {
                    b.HasOne("MachineLearning_SimpleCloud_MicroservicesHttp.Domain.Entities.ServiceDetails", "ServiceDetails")
                        .WithMany("ServiceTasks")
                        .HasForeignKey("ServiceDetailsId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });
#pragma warning restore 612, 618
        }
    }
}
